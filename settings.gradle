rootProject.name = 'HistorialPlus'

def hooksInstalled = false
def hooksUpdated = false

def installGitHooks = {
    def hooksDir = new File(settingsDir, 'githooks')
    def gitHooksDir = new File(settingsDir, '.git/hooks')

    if (!hooksDir.exists()) {
        println "‚ö†Ô∏è  No se encontr√≥ la carpeta githooks"
        return
    }

    hooksDir.eachFile { file ->
        def targetFile = new File(gitHooksDir, file.name)
        if (!targetFile.exists()) {
            targetFile.bytes = file.bytes
            targetFile.setExecutable(true)
            println "‚úì Hook instalado por primera vez: ${file.name}"
            hooksInstalled = true
        } else if (file.text != targetFile.text) {
            targetFile.bytes = file.bytes
            targetFile.setExecutable(true)
            println "üîÑ Hook actualizado: ${file.name}"
            hooksUpdated = true
        }
    }
}

if (!System.getenv('CI')) {
    if (!new File(settingsDir, '.git').exists()) {
        println "‚ö†Ô∏è  No es un repositorio Git, omitiendo instalaci√≥n de hooks"
    } else {
        installGitHooks()
        if (hooksInstalled) {
            println "‚úÖ Git hooks instalados por primera vez"
        }
        if (hooksUpdated) {
            println "‚úÖ Git hooks actualizados"
        }
        if (!hooksInstalled && !hooksUpdated) {
            println "‚ÑπÔ∏è  Todos los hooks ya estaban actualizados"
        }
    }
}